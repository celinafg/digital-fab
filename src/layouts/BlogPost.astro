---
import type { CollectionEntry } from 'astro:content';
import BaseHead from '../components/BaseHead.astro';
import Header from '../components/Header.astro';
import Footer from '../components/Footer.astro';
import FormattedDate from '../components/FormattedDate.astro';
import { Image } from 'astro:assets';


type Props = CollectionEntry<'blog'>['data'];

const { title, description, pubDate, updatedDate, heroImage, sourcefile } = Astro.props;
---

<html lang="en">
	<head>
		<BaseHead title={title} description={description} />
		<style>
			main {
				width: calc(100% - 2em);
				max-width: 100%;
				margin: 0;
			}
			 .hero-image {
				width: 100% !important;
			} 
			.hero-image img {
				display: block;
				margin: 0 auto;
				/* border-radius: 12px; */
				box-shadow: var(--box-shadow);
			} 
			.prose {
				width: 60vw;
				max-width: 1040px;
				margin: auto;
				color: rgb(var(--gray-dark));
			}
			.title {
				margin-bottom: 1em;
				/* padding: 1em 0; */
				text-align: center;
				line-height: 1;
			}
			.title h1 {
				margin: 0 0 0.5em 0;
			}
			.date {
				margin-bottom: 0.5em;
				color: rgb(var(--gray));
			}
			.last-updated-on {
				font-style: italic;
			}

			@media (max-width: 720px) {
.prose {
	width: 88vw;
}}
		</style>
	</head>

	<body>
		<Header />
		<main>
			<article class="prose">
				<div class="prose">
					
					<div class="title">
						
						<h1>{title}</h1>
						<div class="date">
							<FormattedDate date={pubDate} />
							{
								updatedDate && (
									<div class="last-updated-on">
										Last updated on <FormattedDate date={updatedDate} />
									</div>
								)
							}
						</div>
						<a href={`${sourcefile}`}>sourcefile</a>
					</div>
				</div>
				<div class="hero-image">
					{heroImage && <Image width={1020} height={510} src={`/digital-fab${heroImage}`} alt="" />}
				</div>
				<hr />

				<slot />

			</article>
		</main>
		<Footer />
	</body>
</html>
